using Microsoft.EntityFrameworkCore;
using OneProject.Server.Generated;
using OneProject.Server.Models.DTOs;

namespace OneProject.Server.Data
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        public DbSet<Song> Songs { get; set; }
        public DbSet<Playlist> Playlists { get; set; }
        public DbSet<UserEntity> Users { get; set; }
        public DbSet<RefreshToken> RefreshTokens { get; set; }
        public DbSet<PlaylistSong> PlaylistSongs { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            // Ignore non-mappable extension data dictionaries generated by NSwag
            modelBuilder.Entity<Song>().Ignore(e => e.AdditionalProperties);
            modelBuilder.Entity<Playlist>().Ignore(e => e.AdditionalProperties);

            // Items are materialized from join table, not tracked on Playlist model directly
            modelBuilder.Entity<Playlist>().Ignore(e => e.Items);

            modelBuilder.Entity<PlaylistSong>()
                .HasIndex(ps => new { ps.PlaylistId, ps.SongId })
                .IsUnique();

            modelBuilder.Entity<RefreshToken>().HasIndex(r => r.Token).IsUnique();
        }
    }
}
